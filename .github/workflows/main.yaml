name: Docker Compose CI/CD

on:
  push:
    branches: [ "dev" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "dev" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Compose
      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Run Docker Compose to test the application
      - name: Run Docker Compose for testing
        run: docker-compose -f docker-compose.yml up --build -d

      # Wait for services to be ready
      - name: Wait for MySQL to be ready
        run: |
          docker-compose exec db sh -c "while ! mysqladmin ping -hlocalhost -uroot -prootpassword --silent; do sleep 1; done"
      
      # Run your tests (this step assumes you have some kind of tests)
      - name: Run tests
        run: docker-compose exec app sh -c "chmod +x ./mvnw && ./mvnw test"

      # Tear down Docker Compose services
      - name: Tear down services
        run: docker-compose down
