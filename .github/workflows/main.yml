name: Docker Compose CI/CD

on:
  push:
    branches: [ "dev" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "dev" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MYSQL_USER: 'myuser'
  MYSQL_PASSWORD: 'secret'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Docker Compose for testing
        run: docker-compose -f compose.yaml up --build -d

      - name: Tear down services
        run: docker-compose down

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: |
          mvn clean install -DskipTests

      - name: Verify build output
        run: |
          pwd
          ls -la target/

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: 213.210.37.2
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          command_timeout: 500s
          script: |
              if [ -d "BE-GBK" ]; then
                cd BE-GBK
                git pull
              else
                git clone -b dev git@github.com:rickyananada1/BE-GBK.git
                cd BE-GBK
              fi
              docker compose -f compose.yaml up -d --build
              mvn clean spring-boot:run
              
